plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'io.spring.dependency-management' version '1.0.1.RELEASE'
}
ext {
    vertxVersion = '3.6.3'
    junitJupiterEngineVersion = '5.2.0'
}

repositories {
    mavenLocal()
    jcenter()
}

group = 'se.kry'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def mainVerticleName = 'se.kry.codetest.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.14.1'
    }
}

dependencies {

    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-web-client:$vertxVersion"
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'
    implementation group: 'com.google.inject.extensions', name: 'guice-servlet', version: '5.0.1'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.7.2'
    compile 'org.apache.logging.log4j:log4j-api'
    compile 'org.apache.logging.log4j:log4j-core'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.1'
    compile "io.vertx:vertx-jdbc-client:$vertxVersion"


    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.20.2'
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion")
}


shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Verticle': mainVerticleName
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

run {
    args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

run {
    args = ['run', mainVerticleName, "--launcher-class=$mainClassName"]
}
